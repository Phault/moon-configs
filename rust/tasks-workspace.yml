$schema: 'https://moonrepo.dev/schemas/tasks.json'

implicitInputs:
  - 'Cargo.toml'

fileGroups:
  sources:
    - 'Cargo.toml'
    - 'crates/*/src/**/*'
    - 'crates/*/Cargo.toml'
    - 'rust-toolchain.toml'
  tests:
    - 'crates/*/benches/**/*'
    - 'crates/*/tests/**/*'
  other: []

tasks:
  build: &build
    command: 'cargo build'
    inputs:
      - '@group(sources)'
      - '@group(other)'
      - '.cargo/config.toml'
    env: &env
      CARGO_TERM_COLOR: 'always'

  build-release:
    <<: *build
    command: 'cargo build --release'
    local: true

  check:
    command: 'cargo check --workspace --all-targets'
    inputs:
      - '@group(sources)'
      - '@group(tests)'
      - '@group(other)'
    env: *env

  dev:
    command: 'cargo run'
    inputs:
      - '@group(sources)'
      - '@group(other)'
    local: true
    env: *env

  format: &format
    command: 'cargo fmt --all --check'
    inputs:
      - '@group(sources)'
      - '@group(tests)'
      - '@group(other)'
      - 'rustfmt.toml'
    env: *env

  format-write:
    <<: *format
    command: 'cargo fmt --all -- --emit=files'
    local: true

  lint: &lint
    command: 'cargo clippy --workspace --all-targets'
    inputs:
      - '@group(sources)'
      - '@group(tests)'
      - '@group(other)'
      - 'clippy.toml'
    env: *env

  lint-fix:
    <<: *lint
    command: 'cargo clippy --workspace --all-targets --fix --allow-dirty --allow-staged'
    local: true

  test:
    command: 'cargo nextest run --workspace'
    inputs:
      - '@group(sources)'
      - '@group(tests)'
      - '@group(other)'
      - '.config/nextest.*'
    env: *env
